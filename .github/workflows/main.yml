name: V2Ray Scraper Automation

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:

jobs:
  scrape-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install telethon aiohttp

    - name: Create config file
      run: |
        cat << 'EOF' > config.py
        API_ID = ${{ secrets.API_ID }}
        API_HASH = "${{ secrets.API_HASH }}"
        BOT_TOKEN = "${{ secrets.BOT_TOKEN }}"
        USER_SESSION_STRING = "${{ secrets.USER_SESSION_STRING }}"
        TELEGRAM_CHANNELS = ${{ secrets.TELEGRAM_CHANNELS }}
        
        APP_CONFIG = {
            'config_folder': 'output_sub',
            'auto_join': False,
            'limit_messages': 200,
            'request_delay': 1,
            'admin_id': ${{ secrets.ADMIN_ID }}
        }
        EOF

    - name: Run V2Ray Scraper
      run: python main.py

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Push to target repository
      env:
        TARGET_REPO: ${{ secrets.TARGET_REPO }}  # Format: username/repo-name
        GH_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
      run: |
        # Clone target repository
        git clone "https://$GH_TOKEN@github.com/$TARGET_REPO.git" target_repo
        
        # Clear target repo (except .git folder)
        find target_repo -mindepth 1 -not -path 'target_repo/.git/*' -delete
        
        # Copy new files
        if [ -d "output_sub" ]; then
          cp -r output_sub/* target_repo/
        else
          echo "Error: output_sub directory not found"
          exit 1
        fi
        
        # Commit and push
        cd target_repo
        git add .
        if ! git diff-index --quiet HEAD --; then
          git commit -m "Nekoray configs have been updated âœ” - $(TZ='Asia/Jakarta' date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
        else
          echo "No changes to commit"
        fi
